[{"path":"http://klintkanopka.com/meow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Klint Kanopka Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://klintkanopka.com/meow/articles/data-generation.html","id":"writing-your-own-data-loaders","dir":"Articles","previous_headings":"","what":"Writing your own data loaders","title":"Data Generation","text":"Data loaders encode data generating process (DGP) simulation.","code":""},{"path":"http://klintkanopka.com/meow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Klint Kanopka. Author, maintainer. Sophia Deng. Author.","code":""},{"path":"http://klintkanopka.com/meow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kanopka K, Deng S (2025). meow: Unified Framework Computer Adaptive Testing Simulations. R package version 0.0.0.9000, http://klintkanopka.com/meow/.","code":"@Manual{,   title = {meow: Unified Framework for Computer Adaptive Testing Simulations},   author = {Klint Kanopka and Sophia Deng},   year = {2025},   note = {R package version 0.0.0.9000},   url = {http://klintkanopka.com/meow/}, }"},{"path":"http://klintkanopka.com/meow/index.html","id":"meow","dir":"","previous_headings":"","what":"Unified Framework for Computer Adaptive Testing Simulations","title":"Unified Framework for Computer Adaptive Testing Simulations","text":"meow package conducting simulations computer adaptive testing (CAT). pitch meow framework facilitates reproducible comparisons different combinations data generating processes (DGPs), item selection algorithms, parameter update algorithms. functionalizing components treating modular use core simulation harness produces consistent outputs ggplot2-based visualization tools. goal expose structure component functions user, allowing implement custom DGPs, selection algorithms, update algorithms. Users also encouraged contribute function modules associated research projects, facilitating community interaction.","code":""},{"path":"http://klintkanopka.com/meow/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified Framework for Computer Adaptive Testing Simulations","text":"Interested users can install using:","code":"# install.packages(\"remotes\") remotes::install_github(\"klintkanopka/meow\")"},{"path":"http://klintkanopka.com/meow/reference/cat_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Conducts a full CAT simulation. — cat_simulation","title":"Conducts a full CAT simulation. — cat_simulation","text":"Conducts full CAT simulation.","code":""},{"path":"http://klintkanopka.com/meow/reference/cat_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conducts a full CAT simulation. — cat_simulation","text":"","code":"cat_simulation(   select_fun,   update_fun,   data_loader,   init = NULL,   fix = \"none\",   ... )"},{"path":"http://klintkanopka.com/meow/reference/cat_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conducts a full CAT simulation. — cat_simulation","text":"select_fun function specifies item selection algorithm. update_fun function specifies parameter update algorithm. data_loader function specifies data generating process. init list intialization values estimated person item parameters. Currently accepts named list two entities: theta diff, initial estimated values ability difficulty, respectively. Defaults NULL, initializes estimated parameters zero. fix estimated parameters treat fixed. Currently defaults none, accepts theta, diff, .` ... Named arguments passed data_loader, select_fun, update_fun","code":""},{"path":"http://klintkanopka.com/meow/reference/cat_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conducts a full CAT simulation. — cat_simulation","text":"list four named entities, results dataframe one row per iteration simulation. contains three general columns, iter iteration number, RMSE pooled across person abilities named rmse_theta, RMSE pooled across item difficulties named rmse_diff. Additionally one column per person item, one associated estimated parameter (ability difficulty) one bias estimate. Next list item-item adjacency matrices, contained adj_mats. One matrix provided per iteration simulation, edge weights number respondents responded pair items. Finally, true ability difficulty vectors returned theta_tru diff_tru.","code":""},{"path":"http://klintkanopka.com/meow/reference/construct_adj_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs an item pool adjacency matrix. For an item pool with N items, this is an NxN matrix. The diagonal elements contain the number of times an item has been exposed. The off-diagonal elements contain the number of times the pair of items has been exposed to the same respondent. In general, this function is never called directly, but instead called within cat_simulation() calls. — construct_adj_mat","title":"Constructs an item pool adjacency matrix. For an item pool with N items, this is an NxN matrix. The diagonal elements contain the number of times an item has been exposed. The off-diagonal elements contain the number of times the pair of items has been exposed to the same respondent. In general, this function is never called directly, but instead called within cat_simulation() calls. — construct_adj_mat","text":"Constructs item pool adjacency matrix. item pool N items, NxN matrix. diagonal elements contain number times item exposed. -diagonal elements contain number times pair items exposed respondent. general, function never called directly, instead called within cat_simulation() calls.","code":""},{"path":"http://klintkanopka.com/meow/reference/construct_adj_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs an item pool adjacency matrix. For an item pool with N items, this is an NxN matrix. The diagonal elements contain the number of times an item has been exposed. The off-diagonal elements contain the number of times the pair of items has been exposed to the same respondent. In general, this function is never called directly, but instead called within cat_simulation() calls. — construct_adj_mat","text":"","code":"construct_adj_mat(resp_cur, theta_tru, diff_tru)"},{"path":"http://klintkanopka.com/meow/reference/construct_adj_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs an item pool adjacency matrix. For an item pool with N items, this is an NxN matrix. The diagonal elements contain the number of times an item has been exposed. The off-diagonal elements contain the number of times the pair of items has been exposed to the same respondent. In general, this function is never called directly, but instead called within cat_simulation() calls. — construct_adj_mat","text":"resp_cur long-form dataframe observed item responses. theta_tru vector true respondent abilities. diff_tru vector true item difficulties.","code":""},{"path":"http://klintkanopka.com/meow/reference/construct_adj_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs an item pool adjacency matrix. For an item pool with N items, this is an NxN matrix. The diagonal elements contain the number of times an item has been exposed. The off-diagonal elements contain the number of times the pair of items has been exposed to the same respondent. In general, this function is never called directly, but instead called within cat_simulation() calls. — construct_adj_mat","text":"adjacency matrix type matrix.","code":""},{"path":"http://klintkanopka.com/meow/reference/data_default.html","id":null,"dir":"Reference","previous_headings":"","what":"A default data generation function that simulates normally distributed respondent abilities and item difficulties — data_default","title":"A default data generation function that simulates normally distributed respondent abilities and item difficulties — data_default","text":"default data generation function simulates normally distributed respondent abilities item difficulties","code":""},{"path":"http://klintkanopka.com/meow/reference/data_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A default data generation function that simulates normally distributed respondent abilities and item difficulties — data_default","text":"","code":"data_default(N_persons = 100, N_items = 50, data_seed = 242424)"},{"path":"http://klintkanopka.com/meow/reference/data_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A default data generation function that simulates normally distributed respondent abilities and item difficulties — data_default","text":"N_persons Number respondents simulate N_items Number items simulate data_seed random seed generating reproducible data. seed re-initialized end data generation process","code":""},{"path":"http://klintkanopka.com/meow/reference/data_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A default data generation function that simulates normally distributed respondent abilities and item difficulties — data_default","text":"list three components: dataframe item response named resp, vector true respondent abilities named theta_tru, vector true item difficulties named diff_tru","code":""},{"path":"http://klintkanopka.com/meow/reference/data_existing.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from existing files — data_existing","title":"Load data from existing files — data_existing","text":"Load data existing files","code":""},{"path":"http://klintkanopka.com/meow/reference/data_existing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from existing files — data_existing","text":"","code":"data_existing(   resp_path = \"data/sample-resp.csv\",   theta_path = \"data/true-sample-theta.rds\",   diff_path = \"data/true-sample-diff.rds\" )"},{"path":"http://klintkanopka.com/meow/reference/data_existing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from existing files — data_existing","text":"resp_path file path long form .csv file. File three columns, id contains numeric respondent identifier, item contains numeric item identifier, resp contains item response. sure form item response comports parameter update functions choose use. theta_path file path .rds file contains vector true theta vales. diff_path file path .rds file contains vector true item difficulty vales.","code":""},{"path":"http://klintkanopka.com/meow/reference/data_existing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data from existing files — data_existing","text":"list three components: dataframe item response named resp, vector true respondent abilities named theta_tru, vector true item difficulties named diff_tru","code":""}]
